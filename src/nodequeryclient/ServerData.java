/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nodequeryclient;

import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Robert
 */
public class ServerData extends javax.swing.JFrame {
String sql;
String load = "",ip = "",ava = "",la="";

    /**
     * Creates new form ServerData
     */
    public ServerData() {
        initComponents();
    }
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updTablebtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        loadChk = new javax.swing.JCheckBox();
        LAChk = new javax.swing.JCheckBox();
        IPChk = new javax.swing.JCheckBox();
        avaChk = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        updTablebtn.setText("Update Table");
        updTablebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updTablebtnActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(tblData);

        loadChk.setText("Load Percentage");
        loadChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadChkActionPerformed(evt);
            }
        });

        LAChk.setText("Load Average");

        IPChk.setText("IPV4");

        avaChk.setText("Availability");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updTablebtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loadChk, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(77, 77, 77))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IPChk)
                            .addComponent(LAChk)
                            .addComponent(avaChk))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(updTablebtn)
                .addGap(87, 87, 87)
                .addComponent(loadChk)
                .addGap(18, 18, 18)
                .addComponent(LAChk)
                .addGap(18, 18, 18)
                .addComponent(IPChk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(avaChk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updTablebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updTablebtnActionPerformed
        DB db11=new DB();
        
    if (loadChk.isSelected())
    {load=", LOADPERC";}
    
     if (IPChk.isSelected())
    {ip=", IPV4";}
     if (avaChk.isSelected())
    {ava=", AVAILABILITY";}
     if (LAChk.isSelected())
    {la=", LOAD_AVE";}
    
     sql="select UPDATE_TIME, NAME, ID"+load+ip+ava+la+" FROM TBLSERVERS";
     
        tblData.setModel(DbUtils.resultSetToTableModel(db11.ServerData()));
        
        
        
        
    }//GEN-LAST:event_updTablebtnActionPerformed

    private void loadChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadChkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadChkActionPerformed

    public String getSQLquery()
    {   System.out.println(sql);
        return sql;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox IPChk;
    private javax.swing.JCheckBox LAChk;
    private javax.swing.JCheckBox avaChk;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox loadChk;
    private javax.swing.JTable tblData;
    private javax.swing.JButton updTablebtn;
    // End of variables declaration//GEN-END:variables
}
